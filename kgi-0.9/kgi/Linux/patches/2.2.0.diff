diff -r -u --new-file linux-2.2.0/Documentation/Configure.help linux/Documentation/Configure.help
--- linux-2.2.0/Documentation/Configure.help	Wed Jan 20 20:05:32 1999
+++ linux/Documentation/Configure.help	Tue Nov 23 18:27:36 1999
@@ -2107,6 +2107,61 @@
   non-kernel sources, you would benefit from this option. Otherwise
   it's not that important. So, N ought to be a safe bet.
 
+Kernel Graphics Interface (KGI) support
+CONFIG_KGI
+  This option enables support for the Kernel Graphics Interface, which
+  allows you to have virtual terminals on multiple video cards.
+  Video card drivers for supported video graphics cards and
+  input device drivers (mice, keyboards) can be loaded dynamically.
+  NOTE: If you enable this option, make sure you have disabled the 
+  'Virtual Terminal' option or building the kernel will fail.
+
+KGI splash logo
+CONFIG_KGI_SPLASH
+  This option enables the GGI splash logo being displayed at boot.
+  You may want to enable this for debbugging or educational purposes
+  (to see how long the KGI boot display driver is active).
+
+Terminal emulator: dumb console terminal parser
+CONFIG_KGI_TERM_DUMB
+  This enables support for the dumb terminal parser. 
+
+Terminal emulator: xterm-color like terminal parser
+CONFIG_KGI_TERM_XTERM
+  This enables support for the xterm-color like terminal parser.
+
+Linux terminal code backward compatiblity
+CONFIG_KGI_VT_LINUX
+
+/dev/graphic special device file driver
+CONFIG_KGI_DEV_GRAPHIC=y
+  This enables the /dev/graphic special file device services.
+  These provide kernel assisted raw access to the display hardware.
+  You may not need this if you don't want to load KGI display drivers.
+  If unsure, say Yes here.
+
+/dev/event special device driver
+CONFIG_KGI_DEV_EVENT
+  This enables the /dev/event special file device services.
+  These provide kernel assisted access to the input hardware.
+  You may not need this if you don't want to load KGI input drivers.
+  If unsure, say Yes here.
+
+null display support 
+CONFIG_KGI_DPY_NULL
+  If enabled up to CONFIG_KGI_DISPLAY null display drivers are registered
+  after any other boot displays are detected. This way open() on /dev/ttyXX
+  without will not fail. Only useful if you want to use KGI's true multihead
+  capabilities with XFree86. If unsure, say No here.
+
+i386 text buffer display support (VGA, EGA, CGA)
+CONFIG_KGI_DPY_I386
+  If enabled the KGI boot code probes for a monochrome (MDA/Hercules) and
+  a color (CGA,EGA,VGA) display and registers them as display(s) 0 and 1
+  0 if both are detected, or display 0, if one is detetected. You may 
+  load a full featured driver later. If you say No here, you may end 
+  up with a very quiet box. So, if unsure, say Yes here.
+
 Kernel module loader support
 CONFIG_KMOD
   Normally when you have selected some drivers and/or filesystems to
diff -r -u --new-file linux-2.2.0/Makefile linux/Makefile
--- linux-2.2.0/Makefile	Sat Jan 23 19:45:12 1999
+++ linux/Makefile	Tue Nov 23 18:27:37 1999
@@ -116,6 +116,10 @@
 DRIVERS := $(DRIVERS) drivers/nubus/nubus.a
 endif
 
+ifeq ($(CONFIG_KGI),y)
+DRIVERS := $(DRIVERS) drivers/kgi/kgi.a
+endif
+
 ifeq ($(CONFIG_ISDN),y)
 DRIVERS := $(DRIVERS) drivers/isdn/isdn.a
 endif
diff -r -u --new-file linux-2.2.0/arch/i386/defconfig linux/arch/i386/defconfig
--- linux-2.2.0/arch/i386/defconfig	Wed Jan 20 20:33:56 1999
+++ linux/arch/i386/defconfig	Tue Nov 23 18:27:37 1999
@@ -246,9 +246,22 @@
 # CONFIG_CD_NO_IDESCSI is not set
 
 #
-# Character devices
+#	KGI configuration
 #
-CONFIG_VT=y
+CONFIG_KGI=y
+CONFIG_KGI_SPLASH=n
+CONFIG_KGI_TERM_DUMB=n
+CONFIG_KGI_TERM_XTERM=y
+CONFIG_KGI_VT_LINUX=y
+CONFIG_KGI_DEV_GRAPHIC=y
+CONFIG_KGI_DEV_EVENT=y
+CONFIG_KGI_DPY_NULL=y
+CONFIG_KGI_DPY_I386=y
+
+#
+# Character Devices
+#
+CONFIG_VT=n
 CONFIG_VT_CONSOLE=y
 CONFIG_SERIAL=y
 # CONFIG_SERIAL_CONSOLE is not set
diff -r -u --new-file linux-2.2.0/drivers/Makefile linux/drivers/Makefile
--- linux-2.2.0/drivers/Makefile	Fri Nov 20 17:59:01 1998
+++ linux/drivers/Makefile	Tue Nov 23 18:27:37 1999
@@ -17,6 +17,10 @@
 MOD_SUB_DIRS += dio
 endif
 
+ifdef CONFIG_KGI
+SUB_DIRS += kgi
+endif
+
 ifdef CONFIG_PCI
 SUB_DIRS += pci
 endif
diff -r -u --new-file linux-2.2.0/drivers/block/genhd.c linux/drivers/block/genhd.c
--- linux-2.2.0/drivers/block/genhd.c	Sat Jan  9 07:54:17 1999
+++ linux/drivers/block/genhd.c	Tue Nov 23 18:30:00 1999
@@ -1283,7 +1283,9 @@
 
 __initfunc(void device_setup(void))
 {
+#ifdef CONFIG_VT
 	extern void console_map_init(void);
+#endif
 #ifdef CONFIG_PARPORT
 	extern int parport_init(void);
 #endif
diff -r -u --new-file linux-2.2.0/drivers/char/Config.in linux/drivers/char/Config.in
--- linux-2.2.0/drivers/char/Config.in	Sun Dec 27 19:48:46 1998
+++ linux/drivers/char/Config.in	Tue Nov 23 18:27:37 1999
@@ -8,6 +8,22 @@
 if [ "$CONFIG_VT" = "y" ]; then
   bool 'Support for console on virtual terminal' CONFIG_VT_CONSOLE
 fi
+bool 'Kernel Graphics Interface (KGI) support (EXPERIMENTAL)' CONFIG_KGI
+if [ "$CONFIG_KGI" = "y" ]; then
+  bool 'KGI splash logo' CONFIG_KGI_SPLASH
+  bool 'Terminal emulator: dumb terminal' CONFIG_KGI_TERM_DUMB
+  bool 'Terminal emulator: xterm-color terminal' CONFIG_KGI_TERM_XTERM
+  bool 'Linux terminal code backward compatibility' CONFIG_KGI_VT_LINUX
+  bool '/dev/graphic support' CONFIG_KGI_DEV_GRAPHIC
+  bool '/dev/event support' CONFIG_KGI_DEV_EVENT
+  comment 'boot display drivers'
+  bool 'null display support' CONFIG_KGI_DPY_NULL
+  bool 'text16 display (VGA, EGA, CGA, MDA, Hercules)' CONFIG_KGI_DPY_I386
+#  bool ' 8bpp linear frame buffer' CONFIG_KGI_DPY_8BPP
+#  bool '16bpp linear frame buffer' CONFIG_KGI_DPY_16BPP
+#  bool '24bpp linear frame buffer' CONFIG_KGI_DPY_24BPP
+#  bool '32bpp linear frame buffer' CONFIG_KGI_DPY_32BPP
+fi
 tristate 'Standard/generic (dumb) serial support' CONFIG_SERIAL
 if [ "$CONFIG_SERIAL" = "y" ]; then
    bool '   Support for console on serial port' CONFIG_SERIAL_CONSOLE
@@ -54,8 +70,10 @@
   fi
 fi
 
-bool 'Mouse Support (not serial mice)' CONFIG_MOUSE
+if [ "$CONFIG_KGI" = "n" ]; then
 if [ "$CONFIG_MOUSE" = "y" ]; then
+    bool 'Mouse Support (not serial mice)' CONFIG_MOUSE
+    if [ "$CONFIG_MOUSE" = "y" ]; then
 	mainmenu_option next_comment
 	comment 'Mice'
 	tristate 'ATIXL busmouse support' CONFIG_ATIXL_BUSMOUSE
@@ -65,6 +83,8 @@
 	tristate 'C&T 82C710 mouse port support (as on TI Travelmate)' CONFIG_82C710_MOUSE
 	tristate 'PC110 digitizer pad support' CONFIG_PC110_PAD
 	endmenu
+    fi
+fi
 fi
 
 tristate 'QIC-02 tape support' CONFIG_QIC02_TAPE
@@ -147,14 +167,16 @@
 
 endmenu
 
+if [ "$CONFIG_KGI" != "y" ]; then
 mainmenu_option next_comment
 comment 'Joystick support'
 
-tristate 'Joystick support' CONFIG_JOYSTICK
-if [ "$CONFIG_JOYSTICK" != "n" ]; then
-  source drivers/char/joystick/Config.in
-fi
+  tristate 'Joystick support' CONFIG_JOYSTICK
+  if [ "$CONFIG_JOYSTICK" != "n" ]; then
+    source drivers/char/joystick/Config.in
+  fi
 endmenu
+fi
 
 mainmenu_option next_comment
 comment 'Ftape, the floppy tape device driver'
diff -r -u --new-file linux-2.2.0/drivers/char/misc.c linux/drivers/char/misc.c
--- linux-2.2.0/drivers/char/misc.c	Sat Jan 16 02:46:27 1999
+++ linux/drivers/char/misc.c	Tue Nov 23 18:27:37 1999
@@ -47,8 +47,11 @@
 #include <linux/apm_bios.h>
 #endif
 
+#ifndef CONFIG_KGI
 #include <linux/tty.h>
 #include <linux/selection.h>
+#endif
+
 #include <linux/kmod.h>
 
 /*
@@ -62,6 +65,7 @@
 #define DYNAMIC_MINORS 64 /* like dynamic majors */
 static unsigned char misc_minors[DYNAMIC_MINORS / 8];
 
+#ifndef CONFIG_KGI
 extern int bus_mouse_init(void);
 extern int qpmouse_init(void);
 extern int ms_bus_mouse_init(void);
@@ -70,6 +74,7 @@
 extern int atari_mouse_init(void);
 extern int sun_mouse_init(void);
 extern int adb_mouse_init(void);
+#endif
 extern void watchdog_init(void);
 extern void wdt_init(void);
 extern void acq_init(void);
@@ -186,6 +191,7 @@
 	proc_misc = create_proc_entry("misc", 0, 0);
 	if (proc_misc)
 		proc_misc->read_proc = misc_read_proc;
+#ifndef CONFIG_KGI
 #ifdef CONFIG_BUSMOUSE
 	bus_mouse_init();
 #endif
@@ -210,6 +216,8 @@
 #ifdef CONFIG_ADBMOUSE
 	adb_mouse_init();
 #endif
+#endif
+
 #ifdef CONFIG_PC110_PAD
 	pc110pad_init();
 #endif
diff -r -u --new-file linux-2.2.0/drivers/char/sysrq.c linux/drivers/char/sysrq.c
--- linux-2.2.0/drivers/char/sysrq.c	Thu Nov 26 02:25:17 1998
+++ linux/drivers/char/sysrq.c	Tue Nov 23 18:27:37 1999
@@ -18,7 +18,9 @@
 #include <linux/major.h>
 #include <linux/reboot.h>
 #include <linux/sysrq.h>
+#ifndef	CONFIG_KGI
 #include <linux/kbd_kern.h>
+#endif
 #include <linux/quotaops.h>
 #include <linux/smp_lock.h>
 
@@ -64,6 +66,7 @@
 	console_loglevel = 7;
 	printk(KERN_INFO "SysRq: ");
 	switch (key) {
+#ifndef	CONFIG_KGI
 	case 'r':					    /* R -- Reset raw mode */
 		if (kbd) {
 			kbd->kbdmode = VC_XLATE;
@@ -78,6 +81,7 @@
 		reset_vc(fg_console);
 		break;
 #endif
+#endif
 	case 'b':					    /* B -- boot immediately */
 		printk("Resetting\n");
 		machine_restart(NULL);
@@ -131,11 +135,13 @@
 		orig_log_level = 8;
 		break;
 	default:					    /* Unknown: help */
+#ifndef	CONFIG_KGI
 		if (kbd)
 			printk("unRaw ");
 #ifdef CONFIG_VT
 		if (tty)
 			printk("saK ");
+#endif
 #endif
 		printk("Boot "
 #ifdef CONFIG_APM
diff -r -u --new-file linux-2.2.0/drivers/char/tty_io.c linux/drivers/char/tty_io.c
--- linux-2.2.0/drivers/char/tty_io.c	Sat Jan 16 02:46:27 1999
+++ linux/drivers/char/tty_io.c	Tue Nov 23 18:27:37 1999
@@ -85,9 +85,13 @@
 #include <asm/system.h>
 #include <asm/bitops.h>
 
+#ifdef CONFIG_KGI
+#include <linux/kgii.h>
+#else
 #include <linux/kbd_kern.h>
 #include <linux/vt_kern.h>
 #include <linux/selection.h>
+#endif	/* #ifdef CONFIG_KGI */
 
 #include <linux/kmod.h>
 
@@ -1254,6 +1258,18 @@
 		noctty = 1;
 	}
 #endif
+#ifdef CONFIG_KGI
+	if (device == CONSOLE_DEV) {
+
+		int minor = kii_console_device(kii_focus_of_task(current));
+		if (minor < 0) {
+
+			minor = console_printk_console;
+		}
+		device = MKDEV(TTY_MAJOR, minor+1);
+		noctty = 1;
+	}
+#endif
 	if (device == SYSCONS_DEV) {
 		struct console *c = console_drivers;
 		while(c && !c->device)
@@ -2020,6 +2036,9 @@
  * we can't necessarily depend on lots of kernel help here.
  * Just do some early initializations, and do the complex setup
  * later.
+ * 
+ * KGI	For KGI enabled kernels, we initialize the console device termios.
+ * KGI	This is called very early from kgi.c so the above still holds true.
  */
 long __init console_init(long kmem_start, long kmem_end)
 {
@@ -2053,6 +2072,9 @@
 	kmem_start = serial_console_init(kmem_start, kmem_end);
 #endif /* CONFIG_8xx */
 #endif
+#ifdef CONFIG_KGI
+	kmem_start = kgi_boot_init(kmem_start, kmem_end);
+#endif
 	return kmem_start;
 }
 
@@ -2060,7 +2082,7 @@
 #ifdef CONFIG_UNIX98_PTYS
 static struct tty_driver dev_ptmx_driver;
 #endif
-#ifdef CONFIG_VT
+#if defined(CONFIG_VT) || defined(CONFIG_KGI)
 static struct tty_driver dev_console_driver;
 #endif
 
@@ -2117,7 +2139,7 @@
 		panic("Couldn't register /dev/ptmx driver\n");
 #endif
 	
-#ifdef CONFIG_VT
+#if defined(CONFIG_VT) || defined(CONFIG_KGI)
 	dev_console_driver = dev_tty_driver;
 	dev_console_driver.driver_name = "/dev/tty0";
 	dev_console_driver.name = dev_console_driver.driver_name + 5;
@@ -2128,7 +2150,9 @@
 	if (tty_register_driver(&dev_console_driver))
 		panic("Couldn't register /dev/tty0 driver\n");
 
+#ifndef CONFIG_KGI
 	kbd_init();
+#endif
 #endif
 #ifdef CONFIG_ESPSERIAL  /* init ESP before rs, so rs doesn't see the port */
 	espserial_init();
diff -r -u --new-file linux-2.2.0/include/linux/ascii.h linux/include/linux/ascii.h
--- linux-2.2.0/include/linux/ascii.h	Thu Jan  1 01:00:00 1970
+++ linux/include/linux/ascii.h	Tue Nov 23 18:27:37 1999
@@ -0,0 +1,86 @@
+#ifndef	_LINUX_ASCII_H
+#define	_LINUX_ASCII_H
+
+/* ASCII control code definitions */
+
+#define	ASCII_NUL	0	/* null (end of string) */
+#define	ASCII_SOH	1	/* start of heading	*/
+#define	ASCII_STX	2	/* start of text	*/
+#define	ASCII_ETX	3	/* end of text		*/
+#define	ASCII_EOT	4	/* end of transmission	*/
+#define	ASCII_ENQ	5	/* enquiry		*/
+#define	ASCII_ACK	6	/* acknowledge		*/
+#define	ASCII_BEL	7	/* bell			*/
+#define	ASCII_BS	8	/* backspace		*/
+#define	ASCII_HT	9	/* horizontal tab	*/
+#define	ASCII_TAB	9	/* horizontal tab	*/
+
+#define	ASCII_LF	10	/* line feed	        */
+#define	ASCII_VT	11	/* vertical tab		*/
+#define	ASCII_FF	12	/* form feed		*/
+#define	ASCII_CR	13	/* carriage return	*/
+#define	ASCII_SO	14	/* shift out		*/
+#define	ASCII_SI	15	/* shift in		*/
+#define	ASCII_DLE	16	/* data line escape	*/
+#define	ASCII_DC1	17	/* dev-ctrl 1 (X-ON)	*/
+#define	ASCII_DC2	18	/* dev-ctrl 2       	*/
+#define	ASCII_DC3	19	/* dev-ctrl 3 (X-OFF)	*/
+
+#define	ASCII_DC4	20	/* dev-ctrl 4       	*/
+#define	ASCII_NAK	21	/* negative acknowledge	*/
+#define	ASCII_SYN	22	/* synchronous idle	*/
+#define	ASCII_ETB	23	/* end of transmit block*/
+#define	ASCII_CAN	24	/* cancel		*/
+#define	ASCII_EM	25	/* end of medium	*/
+#define	ASCII_SUB	26	/* substitute		*/
+#define	ASCII_ESC	27	/* escape		*/
+#define	ASCII_FS	28	/* file separator	*/
+#define	ASCII_GS	29	/* group separator	*/
+
+#define	ASCII_RS	30	/* record separator	*/
+#define	ASCII_US	31	/* unit separator	*/
+
+#endif	/* _LINUX_ASCII_H */
+#ifndef	_LINUX_ASCII_H
+#define	_LINUX_ASCII_H
+
+/* ASCII control code definitions */
+
+#define	ASCII_NUL	0	/* null (end of string) */
+#define	ASCII_SOH	1	/* start of heading	*/
+#define	ASCII_STX	2	/* start of text	*/
+#define	ASCII_ETX	3	/* end of text		*/
+#define	ASCII_EOT	4	/* end of transmission	*/
+#define	ASCII_ENQ	5	/* enquiry		*/
+#define	ASCII_ACK	6	/* acknowledge		*/
+#define	ASCII_BEL	7	/* bell			*/
+#define	ASCII_BS	8	/* backspace		*/
+#define	ASCII_HT	9	/* horizontal tab	*/
+#define	ASCII_TAB	9	/* horizontal tab	*/
+
+#define	ASCII_LF	10	/* line feed	        */
+#define	ASCII_VT	11	/* vertical tab		*/
+#define	ASCII_FF	12	/* form feed		*/
+#define	ASCII_CR	13	/* carriage return	*/
+#define	ASCII_SO	14	/* shift out		*/
+#define	ASCII_SI	15	/* shift in		*/
+#define	ASCII_DLE	16	/* data line escape	*/
+#define	ASCII_DC1	17	/* dev-ctrl 1 (X-ON)	*/
+#define	ASCII_DC2	18	/* dev-ctrl 2       	*/
+#define	ASCII_DC3	19	/* dev-ctrl 3 (X-OFF)	*/
+
+#define	ASCII_DC4	20	/* dev-ctrl 4       	*/
+#define	ASCII_NAK	21	/* negative acknowledge	*/
+#define	ASCII_SYN	22	/* synchronous idle	*/
+#define	ASCII_ETB	23	/* end of transmit block*/
+#define	ASCII_CAN	24	/* cancel		*/
+#define	ASCII_EM	25	/* end of medium	*/
+#define	ASCII_SUB	26	/* substitute		*/
+#define	ASCII_ESC	27	/* escape		*/
+#define	ASCII_FS	28	/* file separator	*/
+#define	ASCII_GS	29	/* group separator	*/
+
+#define	ASCII_RS	30	/* record separator	*/
+#define	ASCII_US	31	/* unit separator	*/
+
+#endif	/* _LINUX_ASCII_H */
diff -r -u --new-file linux-2.2.0/include/linux/keyboard.h linux/include/linux/keyboard.h
--- linux-2.2.0/include/linux/keyboard.h	Thu Jul 30 20:17:12 1998
+++ linux/include/linux/keyboard.h	Tue Nov 23 18:27:37 1999
@@ -12,6 +12,7 @@
 #define KG_CAPSSHIFT	8
 
 #define NR_SHIFT	9
+#define	MAX_NR_SHIFT	16	/* KII allows up to 16 modifiers.	*/
 
 #define NR_KEYS		128
 #define MAX_NR_KEYMAPS	256
@@ -20,10 +21,12 @@
 #define MAX_NR_OF_USER_KEYMAPS 256 	/* should be at least 7 */
 
 #ifdef __KERNEL__
+#ifndef CONFIG_KGI
 extern const int NR_TYPES;
 extern const int max_vals[];
 extern unsigned short *key_maps[MAX_NR_KEYMAPS];
 extern unsigned short plain_map[NR_KEYS];
+#endif
 extern struct wait_queue * keypress_wait;
 extern unsigned char keyboard_type;
 #endif
@@ -41,8 +44,10 @@
 #define KT_SHIFT	7
 #define KT_META		8
 #define KT_ASCII	9
+#ifndef CONFIG_KGI
 #define KT_LOCK		10
 #define KT_SLOCK	12
+#endif
 
 #define K(t,v)		(((t)<<8)|(v))
 #define KTYP(x)		((x) >> 8)
@@ -306,6 +311,7 @@
 #define K_UNDO		K(KT_FN,255)
 
 
+#define K_VOID		K(KT_SPEC,0)
 #define K_HOLE		K(KT_SPEC,0)
 #define K_ENTER		K(KT_SPEC,1)
 #define K_SH_REGS	K(KT_SPEC,2)
@@ -326,6 +332,8 @@
 #define K_INCRCONSOLE	K(KT_SPEC,17)
 #define K_SPAWNCONSOLE	K(KT_SPEC,18)
 #define K_BARENUMLOCK	K(KT_SPEC,19)
+#define	K_TOGGLESCREEN	K(KT_SPEC,20)
+#define	K_LAST_SPEC	K(KT_SPEC,21)
 
 #define K_ALLOCATED	K(KT_SPEC,126) /* dynamically allocated keymap */
 #define K_NOSUCHMAP	K(KT_SPEC,127) /* returned by KDGKBENT */
@@ -352,6 +360,7 @@
 #define K_PPARENR	K(KT_PAD,19)	/* key-pad right parenthesis */
 
 #define NR_PAD		20
+#define	K_LAST_PAD	K(KT_PAR,NR_PAD)
 
 #define K_DGRAVE	K(KT_DEAD,0)
 #define K_DACUTE	K(KT_DEAD,1)
@@ -361,12 +370,55 @@
 #define K_DCEDIL	K(KT_DEAD,5)
 
 #define NR_DEAD		6
+#define	K_LAST_DEAD	K(KT_DEAD,NR_DEAD)
 
 #define K_DOWN		K(KT_CUR,0)
 #define K_LEFT		K(KT_CUR,1)
 #define K_RIGHT		K(KT_CUR,2)
 #define K_UP		K(KT_CUR,3)
 
+#define	NR_CUR		4
+#define	K_LAST_CUR	K(KT_CUR,NR_CUR)
+
+#ifdef CONFIG_KGI
+
+#define	K_FIRST_NORMAL	K(KT_SHIFT,0)
+#define	K_NORMAL_SHIFT	K(KT_SHIFT,KG_SHIFT)
+#define	K_NORMAL_CTRL	K(KT_SHIFT,KG_CTRL)
+#define	K_NORMAL_ALT	K(KT_SHIFT,KG_ALT)
+#define	K_NORMAL_ALTGR	K(KT_SHIFT,KG_ALTGR)
+#define	K_NORMAL_SHIFTL	K(KT_SHIFT,KG_SHIFTL)
+#define	K_NORMAL_SHIFTR	K(KT_SHIFT,KG_SHIFTR)
+#define	K_NORMAL_CTRLL	K(KT_SHIFT,KG_CTRLL)
+#define	K_NORMAL_CTRLR	K(KT_SHIFT,KG_CTRLR)
+#define	K_LAST_NORMAL	K(KT_SHIFT,MAX_NR_SHIFT)
+
+#define	K_FIRST_LOCKED	K(KT_SHIFT,MAX_NR_SHIFT)
+#define	K_LOCKED_SHIFT	K(KT_SHIFT,MAX_NR_SHIFT + KG_SHIFT)
+#define	K_LOCKED_CTRL	K(KT_SHIFT,MAX_NR_SHIFT + KG_CTRL)
+#define	K_LOCKED_ALT	K(KT_SHIFT,MAX_NR_SHIFT + KG_ALT)
+#define	K_LOCKED_ALTGR	K(KT_SHIFT,MAX_NR_SHIFT + KG_ALTGR)
+#define	K_LOCKED_SHIFTL	K(KT_SHIFT,MAX_NR_SHIFT + KG_SHIFTL)
+#define	K_LOCKED_SHIFTR	K(KT_SHIFT,MAX_NR_SHIFT + KG_SHIFTR)
+#define	K_LOCKED_CTRLL	K(KT_SHIFT,MAX_NR_SHIFT + KG_CTRLL)
+#define	K_LOCKED_CTRLR	K(KT_SHIFT,MAX_NR_SHIFT + KG_CTRLR)
+#define	K_LAST_LOCKED	K(KT_SHIFT,2*MAX_NR_SHIFT)
+
+#define	K_FIRST_STICKY	K(KT_SHIFT,2*MAX_NR_SHIFT)
+#define	K_STICKY_SHIFT	K(KT_SHIFT,2*MAX_NR_SHIFT + KG_SHIFT)
+#define	K_STICKY_CTRL	K(KT_SHIFT,2*MAX_NR_SHIFT + KG_CTRL)
+#define	K_STICKY_ALT	K(KT_SHIFT,2*MAX_NR_SHIFT + KG_ALT)
+#define	K_STICKY_ALTGR	K(KT_SHIFT,2*MAX_NR_SHIFT + KG_ALTGR)
+#define	K_STICKY_SHIFTL	K(KT_SHIFT,2*MAX_NR_SHIFT + KG_SHIFTL)
+#define	K_STICKY_SHIFTR	K(KT_SHIFT,2*MAX_NR_SHIFT + KG_SHIFTR)
+#define	K_STICKY_CTRLL	K(KT_SHIFT,2*MAX_NR_SHIFT + KG_CTRLL)
+#define	K_STICKY_CTRLR	K(KT_SHIFT,2*MAX_NR_SHIFT + KG_CTRLR)
+#define	K_LAST_STICKY	K(KT_SHIFT,3*MAX_NR_SHIFT)
+
+#define	K_LAST_SHIFT	K(KT_SHIFT,3*MAX_NR_SHIFT)
+
+#else	/* #ifdef CONFIG_KGI	*/
+
 #define K_SHIFT		K(KT_SHIFT,KG_SHIFT)
 #define K_CTRL		K(KT_SHIFT,KG_CTRL)
 #define K_ALT		K(KT_SHIFT,KG_ALT)
@@ -377,6 +429,9 @@
 #define K_CTRLR	 	K(KT_SHIFT,KG_CTRLR)
 #define K_CAPSSHIFT	K(KT_SHIFT,KG_CAPSSHIFT)
 
+#endif	/* #ifdef CONFIG_KGI	*/
+
+
 #define K_ASC0		K(KT_ASCII,0)
 #define K_ASC1		K(KT_ASCII,1)
 #define K_ASC2		K(KT_ASCII,2)
@@ -405,6 +460,9 @@
 #define K_HEXf		K(KT_ASCII,25)
 
 #define NR_ASCII	26
+#define	K_LAST_ASCII	K(KT_ASCII,NR_ASCII)
+
+#ifndef CONFIG_KGI
 
 #define K_SHIFTLOCK	K(KT_LOCK,KG_SHIFT)
 #define K_CTRLLOCK	K(KT_LOCK,KG_CTRL)
@@ -427,4 +485,9 @@
 #define NR_LOCK		8
 
 #define MAX_DIACR	256
+
+#else
+#define	U(x)	(0xF000 ^ (x))
+#endif	/* #ifndef CONFIG_KGI */
+
 #endif
diff -r -u --new-file linux-2.2.0/include/linux/kgii.h linux/include/linux/kgii.h
--- linux-2.2.0/include/linux/kgii.h	Thu Jan  1 01:00:00 1970
+++ linux/include/linux/kgii.h	Tue Nov 23 18:27:37 1999
@@ -0,0 +1,94 @@
+#ifndef _linux_kgii_h
+#define	_linux_kgii_h
+
+#ifdef __KERNEL__
+
+/*	KGI/KII limits. 
+**
+** NOTE	All limits need to be less than 255.
+*/
+#define	CONFIG_KGII_MAX_NR_DISPLAYS	8
+#define	CONFIG_KGII_MAX_NR_INPUTS	255
+#define	CONFIG_KGII_MAX_NR_FOCUSES	4
+#define	CONFIG_KGII_MAX_NR_CONSOLES	64
+#define	CONFIG_KGII_MAX_NR_DEVICES	(2*CONFIG_KGII_MAX_NR_CONSOLES)
+
+#define	INVALID_DISPLAY	((unsigned)-1)
+#define	INVALID_INPUT	((unsigned)-1)
+#define	INVALID_FOCUS	((unsigned)-1)
+#define	INVALID_CONSOLE	((unsigned)-1)
+#define	INVALID_DEVICE	((unsigned)-1)
+
+#define	CONFIG_KGII_MAX_NR_DEFFONTS	4
+#define	CONFIG_KGII_CONSOLEBUFSIZE	(2*PAGE_SIZE)
+
+#define	CONFIG_KGI_DISPLAYS	4
+
+/*
+**	public API
+*/
+extern unsigned long kgi_boot_init(unsigned long kmem_start, 
+			unsigned long kmem_end);
+#ifdef	CONFIG_KGI_DPY_I386
+extern int dpy_i386_init(int display, int max_display);
+#endif
+#ifdef	CONFIG_KGI_DPY_NULL
+extern int dpy_null_init(int display, int max_display);
+#endif
+
+extern void kgi_init(void);
+extern int focus_init(void);
+extern void dev_console_init(void);
+extern int dev_graphic_init(void);
+
+/*
+**	public data, kgi.c
+*/
+extern unsigned char console_map[CONFIG_KGII_MAX_NR_FOCUSES][CONFIG_KGII_MAX_NR_CONSOLES];
+extern unsigned char graphic_map[CONFIG_KGII_MAX_NR_FOCUSES][CONFIG_KGII_MAX_NR_CONSOLES];
+extern unsigned char focus_map[CONFIG_KGII_MAX_NR_DEVICES];
+extern unsigned char display_map[CONFIG_KGII_MAX_NR_DEVICES];
+extern unsigned int console_printk_console;
+
+/*
+**	The debugging framework
+*/
+
+#include <kgi/debug.h>
+
+#ifdef	KRN_DEBUG_ANSI_CPP
+
+	extern void __krn_ansi_error(const char *fmt, ...);
+	extern void __krn_ansi_debug(int level, const char *fmt, ...);
+	extern void __krn_ansi_notice(const char *fmt, ...);
+
+#	define	__krn_error	__krn_ansi_error
+#	define	__krn_debug	__krn_ansi_debug
+#	define	__krn_notice	__krn_ansi_notice
+#endif
+
+#ifdef	KRN_DEBUG_GNU_CPP
+
+	extern void __krn_gnu_error(const char *file, int line,
+			const char *func, const char *fmt, ...);
+	extern void __krn_gnu_debug(const char *file, int line,
+			const char *func, int level, const char *fmt, ...);
+	extern void __krn_gnu_notice(const char *fmt, ...);
+
+#	define	__krn_error	__krn_gnu_error
+#	define	__krn_debug	__krn_gnu_debug
+#	define	__krn_notice	__krn_gnu_notice
+#endif
+
+/*
+**	platform-independent interface definitions
+*/
+
+#include <kgi/kgi.h>
+#include <kii/kii.h>
+
+extern kii_keymap_t default_kii_keymap;	/* keymap.c	*/
+
+#endif	/* #ifdef __KERNEL__	*/
+
+#endif	/* #ifndef _linux_kgii_h	*/
diff -r -u --new-file linux-2.2.0/include/linux/mm.h linux/include/linux/mm.h
--- linux-2.2.0/include/linux/mm.h	Tue Jan 26 01:06:22 1999
+++ linux/include/linux/mm.h	Tue Nov 23 18:27:37 1999
@@ -57,6 +57,8 @@
 	unsigned long vm_offset;
 	struct file * vm_file;
 	unsigned long vm_pte;			/* shared mem */
+
+	void	*vm_private;	/* KGI -- hook for handler private data	*/
 };
 
 /*
@@ -80,6 +82,7 @@
 #define VM_EXECUTABLE	0x1000
 #define VM_LOCKED	0x2000
 #define VM_IO           0x4000  /* Memory mapped I/O or similar */
+#define VM_FASTHANDLER	0x8000	/* KGI -- fast MMIO handler */
 
 #define VM_STACK_FLAGS	0x0177
 
diff -r -u --new-file linux-2.2.0/include/linux/tty.h linux/include/linux/tty.h
--- linux-2.2.0/include/linux/tty.h	Tue Jan 26 01:06:19 1999
+++ linux/include/linux/tty.h	Tue Nov 23 18:27:37 1999
@@ -333,19 +333,18 @@
 extern struct termios tty_std_termios;
 extern struct tty_struct * redirect;
 extern struct tty_ldisc ldiscs[];
-extern int fg_console, last_console, want_console;
 
 extern int kmsg_redirect;
 
-extern unsigned long con_init(unsigned long);
-
 extern int rs_init(void);
 extern int lp_init(void);
 extern int pty_init(void);
 extern int tty_init(void);
 extern int pcxe_init(void);
 extern int pc_init(void);
+#ifdef CONFIG_VT
 extern int vcs_init(void);
+#endif
 extern int rp_init(void);
 extern int cy_init(void);
 extern int stl_init(void);
@@ -400,10 +399,16 @@
 
 extern void console_print(const char *);
 
+
+#ifndef CONFIG_KGI
+extern int fg_console, last_console, want_console;
+extern unsigned long con_init(unsigned long);
+
 /* vt.c */
 
 extern int vt_ioctl(struct tty_struct *tty, struct file * file,
 		    unsigned int cmd, unsigned long arg);
+#endif
 
 #endif /* __KERNEL__ */
 #endif
diff -r -u --new-file linux-2.2.0/init/main.c linux/init/main.c
--- linux-2.2.0/init/main.c	Wed Jan 20 19:18:53 1999
+++ linux/init/main.c	Tue Nov 23 18:27:37 1999
@@ -336,6 +336,11 @@
 extern void md_setup(char *str,int *ints) __init;
 #endif
 
+#ifdef CONFIG_KGI
+extern void kgi_init(void);
+extern void kii_init(void);
+#endif
+
 /*
  * Boot command-line arguments
  */
@@ -1213,6 +1218,10 @@
 {
 #ifdef CONFIG_BLK_DEV_INITRD
 	int real_root_mountflags;
+#endif
+#ifdef	CONFIG_KGI
+	kii_init();
+	kgi_init();
 #endif
 
 	/*
diff -r -u --new-file linux-2.2.0/kernel/printk.c linux/kernel/printk.c
--- linux-2.2.0/kernel/printk.c	Fri Nov 20 20:43:19 1998
+++ linux/kernel/printk.c	Tue Nov 23 18:29:02 1999
@@ -329,7 +329,23 @@
 	char	buf[16];
 	signed char msg_level = -1;
 	char	*q;
-
+ 	struct console **prev, *cp;
+ 	  
+ 	prev = &console_drivers;
+ 	for (cp = console_drivers; cp; prev = &(cp->next), cp = cp->next)
+ 	{
+ 		if (cp->device(cp) == console->device(console))
+ 		{
+ 			break;
+ 		}
+ 	}
+ 	
+ 	if (cp)
+ 	{
+ 		*(prev) = cp->next;
+ 		cp->next = NULL;
+ 	}
+ 
 	/*
 	 *	See if we want to use this console driver. If we
 	 *	didn't select a console we take the first one
diff -r -u --new-file linux-2.2.0/mm/memory.c linux/mm/memory.c
--- linux-2.2.0/mm/memory.c	Tue Jan 19 02:33:10 1999
+++ linux/mm/memory.c	Tue Nov 23 18:27:37 1999
@@ -839,6 +839,19 @@
 	unsigned long page;
 	pte_t entry;
 
+ 	/* KGI fast MMIO handler - by Andreas Beck */
+ 	if ((vma->vm_flags & VM_FASTHANDLER) 
+ 		&& vma->vm_ops && vma->vm_ops->nopage) {
+  
+  		if (vma->vm_ops->nopage(vma, address, 
+  			write_access && !(vma->vm_flags & VM_SHARED))) {
+  
+  			force_sig(SIGBUS, current);
+			return 0;
+  		}
+  		return 1;
+ 	}
+
 	if (!vma->vm_ops || !vma->vm_ops->nopage) {
 		unlock_kernel();
 		return do_anonymous_page(tsk, vma, page_table, write_access);
diff -r -u --new-file linux-2.2.0/mm/mmap.c linux/mm/mmap.c
--- linux-2.2.0/mm/mmap.c	Tue Jan 19 01:24:06 1999
+++ linux/mm/mmap.c	Tue Nov 23 18:27:37 1999
@@ -647,15 +647,26 @@
 	 * so release them, and unmap the page range..
 	 * If the one of the segments is only being partially unmapped,
 	 * it will put new vm_area_struct(s) into the address space.
+	 * KGI	If a vma is served by the fast MMIO handler, we have to clear
+	 * KGI	the whole mapping, even if a partial unmap was requested.
 	 */
 	while ((mpnt = free) != NULL) {
 		unsigned long st, end, size;
 
 		free = free->vm_next;
 
-		st = addr < mpnt->vm_start ? mpnt->vm_start : addr;
-		end = addr+len;
-		end = end > mpnt->vm_end ? mpnt->vm_end : end;
+		if (mpnt->vm_flags & VM_FASTHANDLER) {
+
+			st = mpnt->vm_start;
+			end = mpnt->vm_end;
+
+		} else {
+
+			st = addr < mpnt->vm_start ? mpnt->vm_start : addr;
+			end = addr+len;
+			end = end > mpnt->vm_end ? mpnt->vm_end : end;
+		}
+	
 		size = end - st;
 
 		if (mpnt->vm_ops && mpnt->vm_ops->unmap)
@@ -819,6 +830,7 @@
 		    (mpnt->vm_pte != prev->vm_pte)	||
 		    (mpnt->vm_ops != prev->vm_ops)	||
 		    (mpnt->vm_flags != prev->vm_flags)	||
+		    ((mpnt->vm_flags | prev->vm_flags) & VM_FASTHANDLER) ||
 		    (prev->vm_end != mpnt->vm_start))
 			continue;
 
