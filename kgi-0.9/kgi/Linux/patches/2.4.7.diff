diff --exclude CVS -U2 -r -N linux/Documentation/Configure.help linux_kgi/Documentation/Configure.help
--- linux/Documentation/Configure.help	Mon Jul 23 17:09:41 2001
+++ linux_kgi/Documentation/Configure.help	Fri Sep  7 23:04:50 2001
@@ -3835,4 +3835,61 @@
   it's not that important. So, N ought to be a safe bet.
 
+Kernel Graphics Interface (KGI) support
+CONFIG_KGI
+  This option enables support for the Kernel Graphics Interface, which
+  allows you to have virtual terminals on multiple video cards.
+  Video card drivers for supported video graphics cards and
+  input device drivers (mice, keyboards) can be loaded dynamically.
+  NOTE: If you enable this option, make sure you have disabled the
+  'Virtual Terminal' option or building the kernel will fail.
+
+KGI splash logo
+CONFIG_KGI_SPLASH
+  This option enables the GGI splash logo being displayed at boot.
+  You may want to enable this for debbugging or educational purposes
+  (to see how long the KGI boot display driver is active).
+
+Terminal emulator: dumb console terminal parser
+CONFIG_KGI_TERM_DUMB
+  This enables support for the dumb terminal parser.
+
+Terminal emulator: xterm-color like terminal parser
+CONFIG_KGI_TERM_XTERM
+  This enables support for the xterm-color like terminal parser.
+
+Linux terminal code backward compatiblity (EXPERIMENTAL)
+CONFIG_KGI_VT_LINUX
+  This enables the backward compatibility code for
+  the old Linux Virtual Terminal
+
+/dev/graphic special device file driver (EXPERIMENTAL)
+CONFIG_KGI_DEV_GRAPHIC
+  This enables the /dev/graphic special file device services.
+  These provide kernel assisted raw access to the display hardware.
+  You may not need this if you don't want to load KGI display drivers.
+  If unsure, say Yes here.
+
+/dev/event special device driver (EXPERIMENTAL)
+CONFIG_KGI_DEV_EVENT
+  This enables the /dev/event special file device services.
+  These provide kernel assisted access to the input hardware.
+  You may not need this if you don't want to load KGI input drivers.
+  If unsure, say Yes here.
+
+null display support (EXPERIMENTAL)
+CONFIG_KGI_DPY_NULL
+  If enabled up to CONFIG_KGI_DISPLAY null display drivers are registered
+  after any other boot displays are detected. This way open() on /dev/ttyXX
+  without will not fail. Only useful if you want to use KGI's true multihead
+  capabilities with XFree86. If unsure, say No here.
+
+i386 text buffer display support (VGA, EGA, CGA) (EXPERIMENTAL)
+CONFIG_KGI_DPY_I386
+  If enabled the KGI boot code probes for a monochrome (MDA/Hercules) and
+  a color (CGA,EGA,VGA) display and registers them as display(s) 0 and 1
+  0 if both are detected, or display 0, if one is detetected. You may 
+  load a full featured driver later. If you say No here, you may end 
+  up with a very quiet box. So, if unsure, say Yes here.
+
 Kernel module loader support
 CONFIG_KMOD
diff --exclude CVS -U2 -r -N linux/Makefile linux_kgi/Makefile
--- linux/Makefile	Sat Jul 21 06:28:36 2001
+++ linux_kgi/Makefile	Fri Sep  7 23:04:51 2001
@@ -2,5 +2,5 @@
 PATCHLEVEL = 4
 SUBLEVEL = 7
-EXTRAVERSION =
+EXTRAVERSION = kgi
 
 KERNELRELEASE=$(VERSION).$(PATCHLEVEL).$(SUBLEVEL)$(EXTRAVERSION)
@@ -35,4 +35,5 @@
 OBJDUMP		= $(CROSS_COMPILE)objdump
 MAKEFILES	= $(TOPDIR)/.config
+# MAKE		= make -j3
 GENKSYMS	= /sbin/genksyms
 DEPMOD		= /sbin/depmod
@@ -139,4 +140,5 @@
 DRIVERS-$(CONFIG_DRM) += drivers/char/drm/drm.o
 DRIVERS-$(CONFIG_NUBUS) += drivers/nubus/nubus.a
+DRIVERS-$(CONFIG_KGI) += drivers/kgi/kgi.a
 DRIVERS-$(CONFIG_ISDN) += drivers/isdn/isdn.a
 DRIVERS-$(CONFIG_NET_FC) += drivers/net/fc/fc.o
diff --exclude CVS -U2 -r -N linux/arch/i386/defconfig linux_kgi/arch/i386/defconfig
--- linux/arch/i386/defconfig	Mon Jul 16 13:45:15 2001
+++ linux_kgi/arch/i386/defconfig	Fri Sep  7 23:04:51 2001
@@ -496,7 +496,20 @@
 
 #
-# Character devices
+# KGI configuration
 #
-CONFIG_VT=y
+CONFIG_KGI=y
+CONFIG_KGI_SPLASH=n
+CONFIG_KGI_TERM_DUMB=n
+CONFIG_KGI_TERM_XTERM=y
+CONFIG_KGI_VT_LINUX=y
+CONFIG_KGI_DEV_GRAPHIC=y
+CONFIG_KGI_DEV_EVENT=y
+CONFIG_KGI_DPY_NULL=y
+CONFIG_KGI_DPY_I386=y
+
+#
+# Character Devices
+#
+CONFIG_VT=n
 CONFIG_VT_CONSOLE=y
 CONFIG_SERIAL=y
diff --exclude CVS -U2 -r -N linux/arch/i386/kernel/setup.c linux_kgi/arch/i386/kernel/setup.c
--- linux/arch/i386/kernel/setup.c	Wed Jul 11 12:31:44 2001
+++ linux_kgi/arch/i386/kernel/setup.c	Fri Sep  7 23:04:51 2001
@@ -314,5 +314,7 @@
 	{ "pic1", 0x20, 0x3f, IORESOURCE_BUSY },
 	{ "timer", 0x40, 0x5f, IORESOURCE_BUSY },
+#ifndef CONFIG_KGI
 	{ "keyboard", 0x60, 0x6f, IORESOURCE_BUSY },
+#endif
 	{ "dma page reg", 0x80, 0x8f, IORESOURCE_BUSY },
 	{ "pic2", 0xa0, 0xbf, IORESOURCE_BUSY },
diff --exclude CVS -U2 -r -N linux/drivers/Makefile linux_kgi/drivers/Makefile
--- linux/drivers/Makefile	Sun Jul 15 19:15:44 2001
+++ linux_kgi/drivers/Makefile	Fri Sep  7 23:04:51 2001
@@ -16,4 +16,5 @@
 
 subdir-$(CONFIG_DIO)		+= dio
+subdir-$(CONFIG_KGI)		+= kgi
 subdir-$(CONFIG_PCI)		+= pci
 subdir-$(CONFIG_PCMCIA)		+= pcmcia
diff --exclude CVS -U2 -r -N linux/drivers/block/genhd.c linux_kgi/drivers/block/genhd.c
--- linux/drivers/block/genhd.c	Thu Jul 19 20:48:15 2001
+++ linux_kgi/drivers/block/genhd.c	Fri Sep  7 23:04:51 2001
@@ -26,5 +26,7 @@
 #endif
 extern int net_dev_init(void);
+#ifdef CONFIG_VT
 extern void console_map_init(void);
+#endif
 extern int soc_probe(void);
 extern int atmdev_init(void);
diff --exclude CVS -U2 -r -N linux/drivers/char/Config.in linux_kgi/drivers/char/Config.in
--- linux/drivers/char/Config.in	Wed Jul  4 17:41:33 2001
+++ linux_kgi/drivers/char/Config.in	Fri Sep  7 23:04:51 2001
@@ -5,8 +5,18 @@
 comment 'Character devices'
 
-bool 'Virtual terminal' CONFIG_VT
-if [ "$CONFIG_VT" = "y" ]; then
+if [ "$CONFIG_KGI" != "y" ]; then
+   bool 'Virtual terminal' CONFIG_VT
+   if [ "$CONFIG_VT" = "y" ]; then
    bool '  Support for console on virtual terminal' CONFIG_VT_CONSOLE
+   fi
+fi
+
+if [ "$CONFIG_VT" != "y" ]; then
+   bool 'Kernel Graphics Interface (KGI) support (EXPERIMENTAL)' CONFIG_KGI
+   if [ "$CONFIG_KGI" = "y" ]; then
+      source drivers/kgi/Config.in
+   fi
 fi
+
 tristate 'Standard/generic (8250/16550 and compatible UARTs) serial support' CONFIG_SERIAL
 if [ "$CONFIG_SERIAL" = "y" ]; then
@@ -89,4 +99,5 @@
 mainmenu_option next_comment
 comment 'Mice'
+if [ "$CONFIG_KGI" = "n" ]; then
 tristate 'Bus Mouse Support' CONFIG_BUSMOUSE
 if [ "$CONFIG_BUSMOUSE" != "n" ]; then
@@ -105,7 +116,8 @@
    tristate '  PC110 digitizer pad support' CONFIG_PC110_PAD
 fi
+fi
 endmenu
 
-source drivers/char/joystick/Config.in
+#KGI   source drivers/char/joystick/Config.in
 
 tristate 'QIC-02 tape support' CONFIG_QIC02_TAPE
diff --exclude CVS -U2 -r -N linux/drivers/char/Makefile linux_kgi/drivers/char/Makefile
--- linux/drivers/char/Makefile	Wed Jul  4 17:41:33 2001
+++ linux_kgi/drivers/char/Makefile	Fri Sep  7 23:04:51 2001
@@ -130,8 +130,10 @@
 obj-$(CONFIG_SERIAL_AMBA) += serial_amba.o
 
+ifndef CONFIG_KGI
 ifndef CONFIG_SUN_KEYBOARD
   obj-$(CONFIG_VT) += keyboard.o $(KEYMAP) $(KEYBD)
 else
   obj-$(CONFIG_PCI) += keyboard.o $(KEYMAP)
+endif
 endif
 
diff --exclude CVS -U2 -r -N linux/drivers/char/misc.c linux_kgi/drivers/char/misc.c
--- linux/drivers/char/misc.c	Thu May 24 18:14:08 2001
+++ linux_kgi/drivers/char/misc.c	Fri Sep  7 23:04:51 2001
@@ -32,4 +32,6 @@
  *
  * Added devfs support. Richard Gooch <rgooch@atnf.csiro.au>  10-Jan-1998
+ *
+ * kgi support (kgi.sourceforge.net) 199x-
  */
 
@@ -48,9 +50,12 @@
 #include <linux/init.h>
 
+#ifndef CONFIG_KGI
 #include <linux/tty.h>
 #include <linux/selection.h>
+#include "busmouse.h"
+#endif /* CONFIG_KGI */
+
 #include <linux/kmod.h>
 
-#include "busmouse.h"
 
 /*
diff --exclude CVS -U2 -r -N linux/drivers/char/sysrq.c linux_kgi/drivers/char/sysrq.c
--- linux/drivers/char/sysrq.c	Fri Feb  9 14:30:22 2001
+++ linux_kgi/drivers/char/sysrq.c	Fri Sep  7 23:04:51 2001
@@ -20,5 +20,7 @@
 #include <linux/reboot.h>
 #include <linux/sysrq.h>
+#ifndef	CONFIG_KGI
 #include <linux/kbd_kern.h>
+#endif /* CONFIG_KGI */
 #include <linux/quotaops.h>
 #include <linux/smp_lock.h>
@@ -73,4 +75,5 @@
 	printk(KERN_INFO "SysRq: ");
 	switch (key) {
+#ifndef	CONFIG_KGI
 	case 'r':					    /* R -- Reset raw mode */
 		if (kbd) {
@@ -87,4 +90,5 @@
 		break;
 #endif
+#endif /* CONFIG_KGI */
 	case 'b':					    /* B -- boot immediately */
 		printk("Resetting\n");
@@ -140,4 +144,5 @@
 		break;
 	default:					    /* Unknown: help */
+#ifndef	CONFIG_KGI
 		if (kbd)
 			printk("unRaw ");
@@ -146,4 +151,5 @@
 			printk("saK ");
 #endif
+#endif /* CONFIG_KGI */
 		printk("Boot ");
 		if (sysrq_power_off)
diff --exclude CVS -U2 -r -N linux/drivers/char/tty_io.c linux_kgi/drivers/char/tty_io.c
--- linux/drivers/char/tty_io.c	Sun Jul 15 19:15:44 2001
+++ linux_kgi/drivers/char/tty_io.c	Sat Sep  8 02:15:11 2001
@@ -96,12 +96,16 @@
 #include <asm/bitops.h>
 
+#ifdef CONFIG_KGI
+#include <linux/kgii.h>
+#else /* CONFIG_KGI */
 #include <linux/kbd_kern.h>
 #include <linux/vt_kern.h>
 #include <linux/selection.h>
+#endif /* CONFIG_KGI */
 #include <linux/devfs_fs_kernel.h>
 
 #include <linux/kmod.h>
 
-#ifdef CONFIG_VT
+#if defined(CONFIG_VT) || defined(CONFIG_KGI_VT_LINUX)
 extern void con_init_devfs (void);
 #endif
@@ -1314,4 +1318,15 @@
 	}
 #endif
+#ifdef CONFIG_KGI
+	if (device == CONSOLE_DEV) {
+
+		int minor = kii_console_device(kii_focus_of_task(current));
+		if (minor < 0) {
+			minor = console_printk_console;
+		}
+		device = MKDEV(TTY_MAJOR, minor+1);
+		noctty = 1;
+	}
+#endif /* CONFIG_KGI */
 	if (device == SYSCONS_DEV) {
 		struct console *c = console_drivers;
@@ -2165,4 +2180,7 @@
  * Just do some early initializations, and do the complex setup
  * later.
+ * 
+ * KGI	For KGI enabled kernels, we initialize the console device termios.
+ * KGI	This is called very early from kgi.c so the above still holds true.
  */
 void __init console_init(void)
@@ -2199,4 +2217,8 @@
 	serial_console_init();
 #endif /* CONFIG_8xx */
+#endif
+
+#ifdef CONFIG_KGI
+	kgi_boot_init();
 #ifdef CONFIG_SGI_SERIAL
 	sgi_serial_console_init();
@@ -2236,5 +2258,5 @@
 static struct tty_driver dev_ptmx_driver;
 #endif
-#ifdef CONFIG_VT
+#if defined(CONFIG_VT) || defined(CONFIG_KGI)
 static struct tty_driver dev_console_driver;
 #endif
@@ -2280,5 +2302,5 @@
 	 * Thus, we can't devfs_register() then.  Do so now, instead. 
 	 */
-#ifdef CONFIG_VT
+#if defined(CONFIG_VT) || defined(CONFIG_KGI_VT_LINUX)
 	con_init_devfs();
 #endif
@@ -2297,5 +2319,5 @@
 #endif
 	
-#ifdef CONFIG_VT
+#if defined(CONFIG_VT) || defined(CONFIG_KGI)
 	dev_console_driver = dev_tty_driver;
 	dev_console_driver.driver_name = "/dev/vc/0";
@@ -2308,5 +2330,7 @@
 		panic("Couldn't register /dev/tty0 driver\n");
 
+#ifndef CONFIG_KGI
 	kbd_init();
+#endif /* CONFIG_KGI */
 #endif
 #ifdef CONFIG_ESPSERIAL  /* init ESP before rs, so rs doesn't see the port */
diff --exclude CVS -U2 -r -N linux/include/asm-i386/system.h linux_kgi/include/asm-i386/system.h
--- linux/include/asm-i386/system.h	Mon Jul 23 17:22:23 2001
+++ linux_kgi/include/asm-i386/system.h	Sat Sep  8 17:49:21 2001
@@ -158,5 +158,5 @@
 }
 
-extern void inline __set_64bit_constant (unsigned long long *ptr,
+extern inline void __set_64bit_constant (unsigned long long *ptr,
 						 unsigned long long value)
 {
@@ -166,5 +166,5 @@
 #define ll_high(x)	*(((unsigned int*)&(x))+1)
 
-extern void inline __set_64bit_var (unsigned long long *ptr,
+extern inline void __set_64bit_var (unsigned long long *ptr,
 			 unsigned long long value)
 {
diff --exclude CVS -U2 -r -N linux/include/linux/ascii.h linux_kgi/include/linux/ascii.h
--- linux/include/linux/ascii.h	Wed Dec 31 19:00:00 1969
+++ linux_kgi/include/linux/ascii.h	Sat Sep  8 10:59:19 2001
@@ -0,0 +1,86 @@
+#ifndef	_LINUX_ASCII_H
+#define	_LINUX_ASCII_H
+
+/* ASCII control code definitions */
+
+#define	ASCII_NUL	0	/* null (end of string) */
+#define	ASCII_SOH	1	/* start of heading	*/
+#define	ASCII_STX	2	/* start of text	*/
+#define	ASCII_ETX	3	/* end of text		*/
+#define	ASCII_EOT	4	/* end of transmission	*/
+#define	ASCII_ENQ	5	/* enquiry		*/
+#define	ASCII_ACK	6	/* acknowledge		*/
+#define	ASCII_BEL	7	/* bell			*/
+#define	ASCII_BS	8	/* backspace		*/
+#define	ASCII_HT	9	/* horizontal tab	*/
+#define	ASCII_TAB	9	/* horizontal tab	*/
+
+#define	ASCII_LF	10	/* line feed	        */
+#define	ASCII_VT	11	/* vertical tab		*/
+#define	ASCII_FF	12	/* form feed		*/
+#define	ASCII_CR	13	/* carriage return	*/
+#define	ASCII_SO	14	/* shift out		*/
+#define	ASCII_SI	15	/* shift in		*/
+#define	ASCII_DLE	16	/* data line escape	*/
+#define	ASCII_DC1	17	/* dev-ctrl 1 (X-ON)	*/
+#define	ASCII_DC2	18	/* dev-ctrl 2       	*/
+#define	ASCII_DC3	19	/* dev-ctrl 3 (X-OFF)	*/
+
+#define	ASCII_DC4	20	/* dev-ctrl 4       	*/
+#define	ASCII_NAK	21	/* negative acknowledge	*/
+#define	ASCII_SYN	22	/* synchronous idle	*/
+#define	ASCII_ETB	23	/* end of transmit block*/
+#define	ASCII_CAN	24	/* cancel		*/
+#define	ASCII_EM	25	/* end of medium	*/
+#define	ASCII_SUB	26	/* substitute		*/
+#define	ASCII_ESC	27	/* escape		*/
+#define	ASCII_FS	28	/* file separator	*/
+#define	ASCII_GS	29	/* group separator	*/
+
+#define	ASCII_RS	30	/* record separator	*/
+#define	ASCII_US	31	/* unit separator	*/
+
+#endif	/* _LINUX_ASCII_H */
+#ifndef	_LINUX_ASCII_H
+#define	_LINUX_ASCII_H
+
+/* ASCII control code definitions */
+
+#define	ASCII_NUL	0	/* null (end of string) */
+#define	ASCII_SOH	1	/* start of heading	*/
+#define	ASCII_STX	2	/* start of text	*/
+#define	ASCII_ETX	3	/* end of text		*/
+#define	ASCII_EOT	4	/* end of transmission	*/
+#define	ASCII_ENQ	5	/* enquiry		*/
+#define	ASCII_ACK	6	/* acknowledge		*/
+#define	ASCII_BEL	7	/* bell			*/
+#define	ASCII_BS	8	/* backspace		*/
+#define	ASCII_HT	9	/* horizontal tab	*/
+#define	ASCII_TAB	9	/* horizontal tab	*/
+
+#define	ASCII_LF	10	/* line feed	        */
+#define	ASCII_VT	11	/* vertical tab		*/
+#define	ASCII_FF	12	/* form feed		*/
+#define	ASCII_CR	13	/* carriage return	*/
+#define	ASCII_SO	14	/* shift out		*/
+#define	ASCII_SI	15	/* shift in		*/
+#define	ASCII_DLE	16	/* data line escape	*/
+#define	ASCII_DC1	17	/* dev-ctrl 1 (X-ON)	*/
+#define	ASCII_DC2	18	/* dev-ctrl 2       	*/
+#define	ASCII_DC3	19	/* dev-ctrl 3 (X-OFF)	*/
+
+#define	ASCII_DC4	20	/* dev-ctrl 4       	*/
+#define	ASCII_NAK	21	/* negative acknowledge	*/
+#define	ASCII_SYN	22	/* synchronous idle	*/
+#define	ASCII_ETB	23	/* end of transmit block*/
+#define	ASCII_CAN	24	/* cancel		*/
+#define	ASCII_EM	25	/* end of medium	*/
+#define	ASCII_SUB	26	/* substitute		*/
+#define	ASCII_ESC	27	/* escape		*/
+#define	ASCII_FS	28	/* file separator	*/
+#define	ASCII_GS	29	/* group separator	*/
+
+#define	ASCII_RS	30	/* record separator	*/
+#define	ASCII_US	31	/* unit separator	*/
+
+#endif	/* _LINUX_ASCII_H */
diff --exclude CVS -U2 -r -N linux/include/linux/interrupt.h linux_kgi/include/linux/interrupt.h
--- linux/include/linux/interrupt.h	Mon Jul 23 17:22:24 2001
+++ linux_kgi/include/linux/interrupt.h	Sat Sep  8 21:36:57 2001
@@ -28,4 +28,6 @@
 	TIMER_BH = 0,
 	TQUEUE_BH,
+	CONSOLE_BH,
+	KEYBOARD_BH,
 	DIGI_BH,
 	SERIAL_BH,
diff --exclude CVS -U2 -r -N linux/include/linux/keyboard.h linux_kgi/include/linux/keyboard.h
--- linux/include/linux/keyboard.h	Mon Jul 23 17:26:37 2001
+++ linux_kgi/include/linux/keyboard.h	Sat Sep  8 11:29:28 2001
@@ -15,4 +15,5 @@
 
 #define NR_SHIFT	9
+#define	MAX_NR_SHIFT	16	/* KII allows up to 16 modifiers.	*/
 
 #define NR_KEYS		128
@@ -23,8 +24,10 @@
 
 #ifdef __KERNEL__
+#ifndef CONFIG_KGI
 extern const int NR_TYPES;
 extern const int max_vals[];
 extern unsigned short *key_maps[MAX_NR_KEYMAPS];
 extern unsigned short plain_map[NR_KEYS];
+#endif /* CONFIG_KGI */
 extern wait_queue_head_t keypress_wait;
 extern unsigned char keyboard_type;
@@ -44,6 +47,8 @@
 #define KT_META		8
 #define KT_ASCII	9
+#ifndef CONFIG_KGI
 #define KT_LOCK		10
 #define KT_SLOCK	12
+#endif /* CONFIG_KGI */
 
 #define K(t,v)		(((t)<<8)|(v))
@@ -309,4 +314,5 @@
 
 
+#define K_VOID		K(KT_SPEC,0)
 #define K_HOLE		K(KT_SPEC,0)
 #define K_ENTER		K(KT_SPEC,1)
@@ -329,4 +335,6 @@
 #define K_SPAWNCONSOLE	K(KT_SPEC,18)
 #define K_BARENUMLOCK	K(KT_SPEC,19)
+#define	K_TOGGLESCREEN	K(KT_SPEC,20)
+#define	K_LAST_SPEC	K(KT_SPEC,21)
 
 #define K_ALLOCATED	K(KT_SPEC,126) /* dynamically allocated keymap */
@@ -355,4 +363,5 @@
 
 #define NR_PAD		20
+#define	K_LAST_PAD	K(KT_PAR,NR_PAD)
 
 #define K_DGRAVE	K(KT_DEAD,0)
@@ -364,4 +373,5 @@
 
 #define NR_DEAD		6
+#define	K_LAST_DEAD	K(KT_DEAD,NR_DEAD)
 
 #define K_DOWN		K(KT_CUR,0)
@@ -370,4 +380,46 @@
 #define K_UP		K(KT_CUR,3)
 
+#define	NR_CUR		4
+#define	K_LAST_CUR	K(KT_CUR,NR_CUR)
+
+#ifdef CONFIG_KGI
+
+#define	K_FIRST_NORMAL	K(KT_SHIFT,0)
+#define	K_NORMAL_SHIFT	K(KT_SHIFT,KG_SHIFT)
+#define	K_NORMAL_CTRL	K(KT_SHIFT,KG_CTRL)
+#define	K_NORMAL_ALT	K(KT_SHIFT,KG_ALT)
+#define	K_NORMAL_ALTGR	K(KT_SHIFT,KG_ALTGR)
+#define	K_NORMAL_SHIFTL	K(KT_SHIFT,KG_SHIFTL)
+#define	K_NORMAL_SHIFTR	K(KT_SHIFT,KG_SHIFTR)
+#define	K_NORMAL_CTRLL	K(KT_SHIFT,KG_CTRLL)
+#define	K_NORMAL_CTRLR	K(KT_SHIFT,KG_CTRLR)
+#define	K_LAST_NORMAL	K(KT_SHIFT,MAX_NR_SHIFT)
+
+#define	K_FIRST_LOCKED	K(KT_SHIFT,MAX_NR_SHIFT)
+#define	K_LOCKED_SHIFT	K(KT_SHIFT,MAX_NR_SHIFT + KG_SHIFT)
+#define	K_LOCKED_CTRL	K(KT_SHIFT,MAX_NR_SHIFT + KG_CTRL)
+#define	K_LOCKED_ALT	K(KT_SHIFT,MAX_NR_SHIFT + KG_ALT)
+#define	K_LOCKED_ALTGR	K(KT_SHIFT,MAX_NR_SHIFT + KG_ALTGR)
+#define	K_LOCKED_SHIFTL	K(KT_SHIFT,MAX_NR_SHIFT + KG_SHIFTL)
+#define	K_LOCKED_SHIFTR	K(KT_SHIFT,MAX_NR_SHIFT + KG_SHIFTR)
+#define	K_LOCKED_CTRLL	K(KT_SHIFT,MAX_NR_SHIFT + KG_CTRLL)
+#define	K_LOCKED_CTRLR	K(KT_SHIFT,MAX_NR_SHIFT + KG_CTRLR)
+#define	K_LAST_LOCKED	K(KT_SHIFT,2*MAX_NR_SHIFT)
+
+#define	K_FIRST_STICKY	K(KT_SHIFT,2*MAX_NR_SHIFT)
+#define	K_STICKY_SHIFT	K(KT_SHIFT,2*MAX_NR_SHIFT + KG_SHIFT)
+#define	K_STICKY_CTRL	K(KT_SHIFT,2*MAX_NR_SHIFT + KG_CTRL)
+#define	K_STICKY_ALT	K(KT_SHIFT,2*MAX_NR_SHIFT + KG_ALT)
+#define	K_STICKY_ALTGR	K(KT_SHIFT,2*MAX_NR_SHIFT + KG_ALTGR)
+#define	K_STICKY_SHIFTL	K(KT_SHIFT,2*MAX_NR_SHIFT + KG_SHIFTL)
+#define	K_STICKY_SHIFTR	K(KT_SHIFT,2*MAX_NR_SHIFT + KG_SHIFTR)
+#define	K_STICKY_CTRLL	K(KT_SHIFT,2*MAX_NR_SHIFT + KG_CTRLL)
+#define	K_STICKY_CTRLR	K(KT_SHIFT,2*MAX_NR_SHIFT + KG_CTRLR)
+#define	K_LAST_STICKY	K(KT_SHIFT,3*MAX_NR_SHIFT)
+
+#define	K_LAST_SHIFT	K(KT_SHIFT,3*MAX_NR_SHIFT)
+
+#else	/* #ifdef CONFIG_KGI	*/
+
 #define K_SHIFT		K(KT_SHIFT,KG_SHIFT)
 #define K_CTRL		K(KT_SHIFT,KG_CTRL)
@@ -380,4 +432,7 @@
 #define K_CAPSSHIFT	K(KT_SHIFT,KG_CAPSSHIFT)
 
+#endif	/* #ifdef CONFIG_KGI	*/
+
+
 #define K_ASC0		K(KT_ASCII,0)
 #define K_ASC1		K(KT_ASCII,1)
@@ -408,4 +463,7 @@
 
 #define NR_ASCII	26
+#define	K_LAST_ASCII	K(KT_ASCII,NR_ASCII)
+
+#ifndef CONFIG_KGI
 
 #define K_SHIFTLOCK	K(KT_LOCK,KG_SHIFT)
@@ -430,3 +488,8 @@
 
 #define MAX_DIACR	256
+
+#else
+#define	U(x)	(0xF000 ^ (x))
+#endif	/* #ifndef CONFIG_KGI */
+
 #endif
diff --exclude CVS -U2 -r -N linux/include/linux/kgii.h linux_kgi/include/linux/kgii.h
--- linux/include/linux/kgii.h	Wed Dec 31 19:00:00 1969
+++ linux_kgi/include/linux/kgii.h	Sat Sep  8 12:46:27 2001
@@ -0,0 +1,103 @@
+
+#ifndef _linux_kgii_h
+#define	_linux_kgii_h
+
+#ifdef __KERNEL__
+
+#include <linux/version.h>
+
+/*	KGI/KII limits. 
+**
+** NOTE	All limits need to be less than 255.
+*/
+#define	CONFIG_KGII_MAX_NR_DISPLAYS	8
+#define	CONFIG_KGII_MAX_NR_INPUTS	255
+#define	CONFIG_KGII_MAX_NR_FOCUSES	4
+#define	CONFIG_KGII_MAX_NR_CONSOLES	64
+#define	CONFIG_KGII_MAX_NR_DEVICES	(2*CONFIG_KGII_MAX_NR_CONSOLES)
+
+#define	INVALID_DISPLAY	((unsigned)-1)
+#define	INVALID_INPUT	((unsigned)-1)
+#define	INVALID_FOCUS	((unsigned)-1)
+#define	INVALID_CONSOLE	((unsigned)-1)
+#define	INVALID_DEVICE	((unsigned)-1)
+
+#define	CONFIG_KGII_MAX_NR_DEFFONTS	4
+#define	CONFIG_KGII_CONSOLEBUFSIZE	(2*PAGE_SIZE)
+
+#define	CONFIG_KGI_DISPLAYS	4
+
+/*
+**	public API
+*/
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,4,0)
+extern unsigned long kgi_boot_init(unsigned long kmem_start, 
+			unsigned long kmem_end);
+#else
+void kgi_boot_init(void);
+#endif
+
+#ifdef	CONFIG_KGI_DPY_I386
+extern int dpy_i386_init(int display, int max_display);
+#endif
+#ifdef	CONFIG_KGI_DPY_NULL
+extern int dpy_null_init(int display, int max_display);
+#endif
+
+extern void kgi_init(void);
+extern int focus_init(void);
+extern void dev_console_init(void);
+extern int dev_graphic_init(void);
+extern int dev_event_init(void);
+
+/*
+**	public data, kgi.c
+*/
+extern unsigned char console_map[CONFIG_KGII_MAX_NR_FOCUSES][CONFIG_KGII_MAX_NR_CONSOLES];
+extern unsigned char graphic_map[CONFIG_KGII_MAX_NR_FOCUSES][CONFIG_KGII_MAX_NR_CONSOLES];
+extern unsigned char focus_map[CONFIG_KGII_MAX_NR_DEVICES];
+extern unsigned char display_map[CONFIG_KGII_MAX_NR_DEVICES];
+extern unsigned int console_printk_console;
+
+/*
+**	The debugging framework
+*/
+
+#include <kgi/debug.h>
+
+#ifdef	KRN_DEBUG_ANSI_CPP
+
+	extern void __krn_ansi_error(const char *fmt, ...);
+	extern void __krn_ansi_debug(int level, const char *fmt, ...);
+	extern void __krn_ansi_notice(const char *fmt, ...);
+
+#	define	__krn_error	__krn_ansi_error
+#	define	__krn_debug	__krn_ansi_debug
+#	define	__krn_notice	__krn_ansi_notice
+#endif
+
+#ifdef	KRN_DEBUG_GNU_CPP
+
+	extern void __krn_gnu_error(const char *file, int line,
+			const char *func, const char *fmt, ...);
+	extern void __krn_gnu_debug(const char *file, int line,
+			const char *func, int level, const char *fmt, ...);
+	extern void __krn_gnu_notice(const char *fmt, ...);
+
+#	define	__krn_error	__krn_gnu_error
+#	define	__krn_debug	__krn_gnu_debug
+#	define	__krn_notice	__krn_gnu_notice
+#endif
+
+/*
+**	platform-independent interface definitions
+*/
+
+#include <kgi/kgi.h>
+#include <kii/kii.h>
+
+extern kii_keymap_t default_kii_keymap;	/* keymap.c	*/
+
+#endif	/* #ifdef __KERNEL__	*/
+
+#endif	/* #ifndef _linux_kgii_h	*/
diff --exclude CVS -U2 -r -N linux/include/linux/mm.h linux_kgi/include/linux/mm.h
--- linux/include/linux/mm.h	Mon Jul 23 17:22:24 2001
+++ linux_kgi/include/linux/mm.h	Sat Sep  8 21:36:56 2001
@@ -104,7 +104,10 @@
 #define VM_DONTEXPAND	0x00040000	/* Cannot expand with mremap() */
 #define VM_RESERVED	0x00080000	/* Don't unmap it from swap_out */
+#define VM_FASTHANDLER  0x10000000      /* KGI -- fast MMIO handler */
+#define VM_KGIUNMAP     0x20000000      /* temp kludge for missing unmap hook */
 
 #define VM_STACK_FLAGS	0x00000177
 
+
 #define VM_READHINTMASK			(VM_SEQ_READ | VM_RAND_READ)
 #define VM_ClearReadHint(v)		(v)->vm_flags &= ~VM_READHINTMASK
@@ -129,4 +132,5 @@
 	void (*close)(struct vm_area_struct * area);
 	struct page * (*nopage)(struct vm_area_struct * area, unsigned long address, int write_access);
+        void (*unmap)(struct vm_area_struct *area, unsigned long, size_t);
 };
 
diff --exclude CVS -U2 -r -N linux/include/linux/signal.h linux_kgi/include/linux/signal.h
--- linux/include/linux/signal.h	Mon Jul 23 17:22:24 2001
+++ linux_kgi/include/linux/signal.h	Sun Sep  9 20:59:50 2001
@@ -74,5 +74,6 @@
 	unsigned long i;						\
 									\
-	for (i = 0; i < _NSIG_WORDS/4; ++i) {				\
+	/* Funny math is for GCC's benefit */				\
+	for (i = 0; (i + 1) < (_NSIG_WORDS/4 + 1); ++i) {		\
 		a0 = a->sig[4*i+0]; a1 = a->sig[4*i+1];			\
 		a2 = a->sig[4*i+2]; a3 = a->sig[4*i+3];			\
@@ -124,5 +125,6 @@
 	unsigned long i;						\
 									\
-	for (i = 0; i < _NSIG_WORDS/4; ++i) {				\
+	/* Funny math is for GCC's benefit */				\
+	for (i = 0; (i + 1) < (_NSIG_WORDS/4 + 1); ++i) {		\
 		set->sig[4*i+0] = op(set->sig[4*i+0]);			\
 		set->sig[4*i+1] = op(set->sig[4*i+1]);			\
diff --exclude CVS -U2 -r -N linux/include/linux/tty.h linux_kgi/include/linux/tty.h
--- linux/include/linux/tty.h	Mon Jul 23 17:22:24 2001
+++ linux_kgi/include/linux/tty.h	Sat Sep  8 21:36:56 2001
@@ -344,9 +344,12 @@
 extern struct tty_struct * redirect;
 extern struct tty_ldisc ldiscs[];
+#ifndef CONFIG_KGI
 extern int fg_console, last_console, want_console;
-
+#endif
 extern int kmsg_redirect;
 
+#ifndef CONFIG_KGI
 extern void con_init(void);
+#endif
 extern void console_init(void);
 
@@ -359,5 +362,7 @@
 extern int pcxe_init(void);
 extern int pc_init(void);
+#ifdef CONFIG_VT
 extern int vcs_init(void);
+#endif
 extern int rp_init(void);
 extern int cy_init(void);
@@ -417,8 +422,13 @@
 extern void console_print(const char *);
 
+
+#ifndef CONFIG_KGI
+extern int fg_console, last_console, want_console;
+
 /* vt.c */
 
 extern int vt_ioctl(struct tty_struct *tty, struct file * file,
 		    unsigned int cmd, unsigned long arg);
+#endif
 
 #endif /* __KERNEL__ */
diff --exclude CVS -U2 -r -N linux/init/main.c linux_kgi/init/main.c
--- linux/init/main.c	Sat Jul 21 06:28:37 2001
+++ linux_kgi/init/main.c	Fri Sep  7 23:04:51 2001
@@ -110,4 +110,9 @@
 #endif
 
+#ifdef CONFIG_KGI
+extern void kgi_init(void);
+extern void kii_init(void);
+#endif
+
 /*
  * Boot command-line arguments
@@ -672,4 +677,8 @@
 	child_reaper = current;
 
+#ifdef CONFIG_KGI
+	kii_init();
+	kgi_init();
+#endif
 #if defined(CONFIG_MTRR)	/* Do this after SMP initialization */
 /*
diff --exclude CVS -U2 -r -N linux/kernel/printk.c linux_kgi/kernel/printk.c
--- linux/kernel/printk.c	Tue Feb 13 16:15:05 2001
+++ linux_kgi/kernel/printk.c	Fri Sep  7 23:04:51 2001
@@ -358,4 +358,20 @@
 	char	*q;
 	unsigned long flags;
+	struct console **prev, *cp;
+	  
+	prev = &console_drivers;
+	for (cp = console_drivers; cp; prev = &(cp->next), cp = cp->next)
+	{
+		if (cp->device(cp) == console->device(console))
+		{
+			break;
+		}
+	}
+	
+	if (cp)
+	{
+		*(prev) = cp->next;
+		cp->next = NULL;
+	}
 
 	/*
diff --exclude CVS -U2 -r -N linux/mm/memory.c linux_kgi/mm/memory.c
--- linux/mm/memory.c	Thu Jul 12 12:05:22 2001
+++ linux_kgi/mm/memory.c	Sat Sep  8 15:51:57 2001
@@ -1203,4 +1203,15 @@
 	pte_t entry;
 
+	/* KGI fast MMIO handler - by Andreas Beck */
+	if ((vma->vm_flags & VM_FASTHANDLER)
+				&& vma->vm_ops && vma->vm_ops->nopage) {
+		if (vma->vm_ops->nopage(vma, address,
+				write_access && !(vma->vm_flags & VM_SHARED))) {
+			force_sig(SIGBUS, current);
+			return 0;
+		}
+		return 1;
+	}
+
 	if (!vma->vm_ops || !vma->vm_ops->nopage)
 		return do_anonymous_page(mm, vma, page_table, write_access, address);
diff --exclude CVS -U2 -r -N linux/mm/mmap.c linux_kgi/mm/mmap.c
--- linux/mm/mmap.c	Thu May 24 18:20:18 2001
+++ linux_kgi/mm/mmap.c	Sat Sep  8 21:35:43 2001
@@ -760,4 +760,6 @@
 	 * it will put new vm_area_struct(s) into the address space.
 	 * In that case we have to be careful with VM_DENYWRITE.
+	 * KGI  If a vma is served by the fast MMIO handler, we have to clear
+	 * KGI  the whole mapping, even if a partial unmap was requested.
 	 */
 	while ((mpnt = free) != NULL) {
@@ -767,9 +769,25 @@
 		free = free->vm_next;
 
+#ifdef CONFIG_KGI
+              if (mpnt->vm_flags & VM_FASTHANDLER) {
+                      st = mpnt->vm_start;
+                      end = mpnt->vm_end;
+              } else {
+#endif
 		st = addr < mpnt->vm_start ? mpnt->vm_start : addr;
 		end = addr+len;
 		end = end > mpnt->vm_end ? mpnt->vm_end : end;
-		size = end - st;
+#ifdef CONFIG_KGI
+	      }
+#endif
+	      size = end - st;
 
+#ifdef CONFIG_KGI
+	      if (mpnt->vm_flags & VM_KGIUNMAP) { 
+		/* unmap may not be initialized by others */
+	      if (mpnt->vm_ops && mpnt->vm_ops->unmap)
+		mpnt->vm_ops->unmap(mpnt, st, size);
+	      }
+#endif
 		if (mpnt->vm_flags & VM_DENYWRITE &&
 		    (st != mpnt->vm_start || end != mpnt->vm_end) &&
