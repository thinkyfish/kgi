/*	Do not edit this file! It was automatically generated by
**		loadkeys --mktable keymap.kmap > keymap.c
*/

#define	NR_KEYS	128

#define GC(index) (0xF500 + KII_MAX_NR_CONSOLES + (index))

#ifndef CONFIG_KDB
static
#endif
kii_unicode_t default_kii_keymap_00[NR_KEYS] =
{
	0xf200,	0x001b,	0x0031,	0x0032,	0x0033,	0x0034,	0x0035,	0x0036,
	0x0037,	0x0038,	0x0039,	0x0030,	0x002d,	0x003d,	0x007f,	0x0009,
	0x0071,	0x0077,	0x0065,	0x0072,	0x0074,	0x0079,	0x0075,	0x0069,
	0x006f,	0x0070,	0x005b,	0x005d,	0xf201,	0xf702,	0x0061,	0x0073,
	0x0064,	0x0066,	0x0067,	0x0068,	0x006a,	0x006b,	0x006c,	0x003b,
	0x0027,	0x0060,	0xf700,	0x005c,	0x007a,	0x0078,	0x0063,	0x0076,
	0x0062,	0x006e,	0x006d,	0x002c,	0x002e,	0x002f,	0xf700,	0xf30c,
	0xf703,	0x0020,	0xf207,	0xf100,	0xf101,	0xf102,	0xf103,	0xf104,
	0xf105,	0xf106,	0xf107,	0xf108,	0xf109,	0xf208,	0xf209,	0xf307,
	0xf308,	0xf309,	0xf30b,	0xf304,	0xf305,	0xf306,	0xf30a,	0xf301,
	0xf302,	0xf303,	0xf300,	0xf310,	0xf206,	0xf200,	0x003c,	0xf10a,
	0xf10b,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,
	0xf30e,	0xf702,	0xf30d,	0xf01c,	0xf701,	0xf205,	0xf114,	0xf603,
	0xf118,	0xf601,	0xf602,	0xf117,	0xf600,	0xf119,	0xf115,	0xf116,
	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf11d,
	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,
};

#ifndef CONFIG_KDB
static
#endif
kii_unicode_t default_kii_keymap_01[NR_KEYS] =
{
	0xf200,	0x001b,	0x0021,	0x0040,	0x0023,	0x0024,	0x0025,	0x005e,
	0x0026,	0x002a,	0x0028,	0x0029,	0x005f,	0x002b,	0x007f,	0x0009,
	0x0051,	0x0057,	0x0045,	0x0052,	0x0054,	0x0059,	0x0055,	0x0049,
	0x004f,	0x0050,	0x007b,	0x007d,	0xf201,	0xf702,	0x0041,	0x0053,
	0x0044,	0x0046,	0x0047,	0x0048,	0x004a,	0x004b,	0x004c,	0x003a,
	0x0022,	0x007e,	0xf700,	0x007c,	0x005a,	0x0058,	0x0043,	0x0056,
	0x0042,	0x004e,	0x004d,	0x003c,	0x003e,	0x003f,	0xf700,	0xf30c,
	0xf703,	0x0020,	0xf207,	0xf10c,	0xf10d,	0xf10e,	0xf10f,	0xf110,
	0xf111,	0xf112,	0xf113,	0xf11e,	0xf11f,	0xf208,	0xf203,	0xf307,
	0xf308,	0xf309,	0xf30b,	0xf304,	0xf305,	0xf306,	0xf30a,	0xf301,
	0xf302,	0xf303,	0xf300,	0xf310,	0xf206,	0xf200,	0x003e,	0xf120,
	0xf121,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,
	0xf30e,	0xf702,	0xf30d,	0xf01c,	0xf701,	0xf205,	0xf114,	0xf603,
	0xf20b,	0xf601,	0xf602,	0xf117,	0xf600,	0xf20a,	0xf115,	0xf116,
	0xf11a,	0xf10c,	0xf10d,	0xf11b,	0xf11c,	0xf110,	0xf311,	0xf11d,
	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,
};

static kii_unicode_t default_kii_keymap_02[NR_KEYS] =
{
	0xf200,	0xf01b,	0xf200,	0x0040,	0xf200,	0x0024,	0xf200,	0xf200,
	0x007b,	0x005b,	0x005d,	0x007d,	0x005c,	0xf200,	0x007f,	0xf009,
	0x0040,	0x0077,	0x0065,	0x0072,	0x0074,	0x007a,	0x0075,	0x0069,
	0x006f,	0x0070,	0xf200,	0x007e,	0xf201,	0xf702,	0x0061,	0x0073,
	0x0064,	0x0066,	0x0067,	0x0068,	0x006a,	0x006b,	0x006c,	0xf200,
	0xf200,	0xf200,	0xf700,	0xf200,	0x0079,	0x0078,	0x0063,	0x0076,
	0x0062,	0x006e,	0x00b5,	0xf200,	0xf200,	0xf200,	0xf700,	0xf30c,
	0xf703,	0xf200,	0xf207,	GC(0),	GC(1),	GC(2),	GC(3),	GC(4),
	GC(5),	GC(6),	GC(7),	GC(8),	GC(9),	0xf208,	0xf202,	0xf307,
	0xf308,	0xf309,	0xf30b,	0xf304,	0xf305,	0xf306,	0xf30a,	0xf301,
	0xf302,	0xf303,	0xf300,	0xf30f,	0xf206,	0xf200,	0x007c,	GC(10),
	GC(11), 0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,
	0xf30e,	0xf702,	0xf30d,	0xf200,	0xf701,	0xf205,	0xf114,	0xf603,
	0xf118,	0xf601,	0xf602,	0xf117,	0xf600,	0xf119,	0xf115,	0xf116,
	0xf11a,	0xf10c,	0xf10d,	0xf11b,	0xf11c,	0xf110,	0xf311,	0xf11d,
	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,
};

#ifndef CONFIG_KDB
static
#endif
kii_unicode_t default_kii_keymap_04[NR_KEYS] =
{
	0xf200,	0xf200,	0xf200,	0x0000,	0x001b,	0x001c,	0x001d,	0x001e,
	0x001f,	0x007f,	0xf200,	0xf200,	0x001f,	0xf200,	0x0008,	0xf200,
	0x0011,	0x0017,	0x0005,	0x0012,	0x0014,	0x0019,	0x0015,	0x0009,
	0x000f,	0x0010,	0x001b,	0x001d,	0xf201,	0xf702,	0x0001,	0x0013,
	0x0004,	0x0006,	0x0007,	0x0008,	0x000a,	0x000b,	0x000c,	0xf200,
	0x0007,	0x0000,	0xf700,	0x001c,	0x001a,	0x0018,	0x0003,	0x0016,
	0x0002,	0x000e,	0x000d,	0xf200,	0xf20e,	0x007f,	0xf700,	0xf30c,
	0xf703,	0x0000,	0xf207,	0xf100,	0xf101,	0xf102,	0xf103,	0xf104,
	0xf105,	0xf106,	0xf107,	0xf108,	0xf109,	0xf208,	0xf204,	0xf307,
	0xf308,	0xf309,	0xf30b,	0xf304,	0xf305,	0xf306,	0xf30a,	0xf301,
	0xf302,	0xf303,	0xf300,	0xf30f,	0xf206,	0xf200,	0xf200,	0xf10a,
	0xf10b,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,
	0xf30e,	0xf702,	0xf30d,	0x001c,	0xf701,	0xf205,	0xf114,	0xf603,
	0xf118,	0xf601,	0xf602,	0xf117,	0xf600,	0xf119,	0xf115,	0xf116,
	0xf11a,	0xf10c,	0xf10d,	0xf11b,	0xf11c,	0xf110,	0xf311,	0xf205,
	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,
};

static kii_unicode_t default_kii_keymap_05[NR_KEYS] =
{
	0xf200,	0xf200,	0xf200,	0x0000,	0xf200,	0xf200,	0xf200,	0xf200,
	0xf200,	0xf200,	0xf200,	0xf200,	0x001f,	0xf200,	0xf200,	0xf200,
	0x0011,	0x0017,	0x0005,	0x0012,	0x0014,	0x001a,	0x0015,	0x0009,
	0x000f,	0x0010,	0xf200,	0xf200,	0xf201,	0xf702,	0x0001,	0x0013,
	0x0004,	0x0006,	0x0007,	0x0008,	0x000a,	0x000b,	0x000c,	0xf200,
	0xf200,	0xf200,	0xf700,	0xf200,	0x0019,	0x0018,	0x0003,	0x0016,
	0x0002,	0x000e,	0x000d,	0xf200,	0xf200,	0x001f,	0xf700,	0xf30c,
	0xf703,	0xf200,	0xf207,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,
	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf208,	0xf200,	0xf307,
	0xf308,	0xf309,	0xf30b,	0xf304,	0xf305,	0xf306,	0xf30a,	0xf301,
	0xf302,	0xf303,	0xf300,	0xf30f,	0xf206,	0xf200,	0xf200,	0xf200,
	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,
	0xf30e,	0xf702,	0xf30d,	0xf200,	0xf701,	0xf205,	0xf114,	0xf603,
	0xf118,	0xf601,	0xf602,	0xf117,	0xf600,	0xf119,	0xf115,	0xf116,
	0xf11a,	0xf10c,	0xf10d,	0xf11b,	0xf11c,	0xf110,	0xf311,	0xf11d,
	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,
};

static kii_unicode_t default_kii_keymap_06[NR_KEYS] =
{
	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,
	0xf200,	0xf200,	0x001d,	0xf200,	0x001c,	0xf200,	0xf200,	0xf200,
	0xf200,	0x0017,	0x0005,	0x0012,	0x0014,	0x001a,	0x0015,	0x0009,
	0x000f,	0x0010,	0xf200,	0xf200,	0xf201,	0xf702,	0x0001,	0x0013,
	0x0004,	0x0006,	0x0007,	0x0008,	0x000a,	0x000b,	0x000c,	0xf200,
	0xf200,	0xf200,	0xf700,	0xf200,	0x0019,	0x0018,	0x0003,	0x0016,
	0x0002,	0x000e,	0x000d,	0xf200,	0xf200,	0xf200,	0xf700,	0xf30c,
	0xf703,	0xf200,	0xf207,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,
	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf208,	0xf200,	0xf307,
	0xf308,	0xf309,	0xf30b,	0xf304,	0xf305,	0xf306,	0xf30a,	0xf301,
	0xf302,	0xf303,	0xf300,	0xf20c,	0xf206,	0xf200,	0xf200,	0xf200,
	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,
	0xf30e,	0xf702,	0xf30d,	0xf200,	0xf701,	0xf205,	0xf114,	0xf603,
	0xf118,	0xf601,	0xf602,	0xf117,	0xf600,	0xf119,	0xf115,	0xf20c,
	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,
	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,
};

static kii_unicode_t default_kii_keymap_08[NR_KEYS] =
{
	0xf200,	0xf81b,	0xf831,	0xf832,	0xf833,	0xf834,	0xf835,	0xf836,
	0xf837,	0xf838,	0xf839,	0xf830,	0xf82d,	0xf83d,	0xf87f,	0xf809,
	0xf871,	0xf877,	0xf865,	0xf872,	0xf874,	0xf87a,	0xf875,	0xf869,
	0xf86f,	0xf870,	0xf85b,	0xf85d,	0xf80d,	0xf702,	0xf861,	0xf873,
	0xf864,	0xf866,	0xf867,	0xf868,	0xf86a,	0xf86b,	0xf86c,	0xf83b,
	0xf827,	0xf860,	0xf700,	0xf85c,	0xf879,	0xf878,	0xf863,	0xf876,
	0xf862,	0xf86e,	0xf86d,	0xf82c,	0xf82e,	0xf82f,	0xf700,	0xf30c,
	0xf703,	0xf820,	0xf207,	0xf500,	0xf501,	0xf502,	0xf503,	0xf504,
	0xf505,	0xf506,	0xf507,	0xf508,	0xf509,	0xf208,	0xf209,	0xf907,
	0xf908,	0xf909,	0xf30b,	0xf904,	0xf905,	0xf906,	0xf30a,	0xf901,
	0xf902,	0xf903,	0xf900,	0xf30f,	0xf206,	0xf200,	0xf83c,	0xf50a,
	0xf50b,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,
	0xf30e,	0xf702,	0xf30d,	0x001c,	0xf701,	0xf205,	0xf114,	0xf603,
	0xf118,	0xf601,	0xf602,	0xf117,	0xf600,	0xf119,	0xf115,	0xf116,
	0xf11a,	0xf10c,	0xf10d,	0xf11b,	0xf11c,	0xf110,	0xf311,	0xf11d,
	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,
};

static kii_unicode_t default_kii_keymap_0A[NR_KEYS] =
{
	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,
	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,
	0xf840,	0xf877,	0xf865,	0xf872,	0xf874,	0xf87a,	0xf875,	0xf869,
	0xf86f,	0xf870,	0xf200,	0xf200,	0xf201,	0xf702,	0xf861,	0xf873,
	0xf864,	0xf866,	0xf867,	0xf868,	0xf86a,	0xf86b,	0xf86c,	0xf200,
	0xf200,	0xf200,	0xf700,	0xf200,	0xf879,	0xf878,	0xf863,	0xf876,
	0xf862,	0xf86e,	0xf86d,	0xf200,	0xf200,	0xf200,	0xf700,	0xf30c,
	0xf703,	0xf200,	0xf207,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,
	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf208,	0xf200,	0xf307,
	0xf308,	0xf309,	0xf30b,	0xf304,	0xf305,	0xf306,	0xf30a,	0xf301,
	0xf302,	0xf303,	0xf300,	0xf30f,	0xf206,	0xf200,	0xf200,	0xf200,
	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,
	0xf30e,	0xf702,	0xf30d,	0xf200,	0xf701,	0xf205,	0xf114,	0xf603,
	0xf118,	0xf601,	0xf602,	0xf117,	0xf600,	0xf119,	0xf115,	0xf116,
	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,
	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,
};

static kii_unicode_t default_kii_keymap_0C[NR_KEYS] =
{
	0xf200,	0xf215,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,
	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,
	0xf811,	0xf817,	0xf805,	0xf812,	0xf814,	0xf81a,	0xf815,	0xf809,
	0xf80f,	0xf810,	0xf200,	0xf200,	0xf201,	0xf702,	0xf801,	0xf813,
	0xf804,	0xf806,	0xf807,	0xf808,	0xf80a,	0xf80b,	0xf80c,	0xf200,
	0xf200,	0xf200,	0xf700,	0xf200,	0xf819,	0xf818,	0xf803,	0xf816,
	0xf802,	0xf80e,	0xf80d,	0xf200,	0xf200,	0xf200,	0xf700,	0xf30c,
	0xf703,	0xf200,	0xf207,	0xf500,	0xf501,	0xf502,	0xf503,	0xf504,
	0xf505,	0xf506,	0xf507,	0xf508,	0xf509,	0xf208,	0xf200,	0xf307,
	0xf308,	0xf309,	0xf30b,	0xf304,	0xf305,	0xf306,	0xf30a,	0xf301,
	0xf302,	0xf303,	0xf300,	0xf20c,	0xf206,	0xf200,	0xf200,	0xf50a,
	0xf50b,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,
	0xf30e,	0xf702,	0xf30d,	0xf200,	0xf701,	0xf205,	0xf114,	0xf603,
	0xf118,	0xf601,	0xf602,	0xf117,	0xf600,	0xf119,	0xf115,	0xf20c,
	0xf11a,	0xf10c,	0xf10d,	0xf11b,	0xf11c,	0xf110,	0xf311,	0xf20f,
	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,	0xf200,
};

static kii_unicode_t *default_kii_keymap_maps[16] =
{
	default_kii_keymap_00,	default_kii_keymap_01,
	default_kii_keymap_02,	NULL,
	default_kii_keymap_04,	default_kii_keymap_05,
	default_kii_keymap_06,	NULL,
	default_kii_keymap_08,	NULL,
	default_kii_keymap_0A,	NULL,
	default_kii_keymap_0C,
};

/*	Philosophy: most people do not define more strings, but they who do
**	often want quite a lot of string space. So, we statically allocate
**	the default and allocate dynamically in chunks of 512 bytes.
*/
#ifndef CONFIG_KDB
static
#endif
char *default_kii_keymap_fnstr[30] =
{
	"\033[[A",
	"\033[[B",
	"\033[[C",
	"\033[[D",
	"\033[[E",
	"\033[17~",
	"\033[18~",
	"\033[19~",
	"\033[20~",
	"\033[21~",
	"\033[23~",
	"\033[24~",
	"\033[25~",
	"\033[26~",
	"\033[28~",
	"\033[29~",
	"\033[31~",
	"\033[32~",
	"\033[33~",
	"\033[34~",
	"\033[1~",
	"\033[2~",
	"\033[3~",
	"\033[4~",
	"\033[5~",
	"\033[6~",
	"\033[M",
	NULL,
	NULL,
	"\033[P",
};

kii_keymap_t default_kii_keymap =
{
	0,		/* fn_buf_size		*/
	NULL,		/* fn_buf		*/
	30,		/* fn_str_size		*/
	default_kii_keymap_fnstr,
	0, 127,		/* keymin/keymax	*/
	16,		/* keymap_size		*/
	default_kii_keymap_maps,
	0,		/* combine_size		*/
	NULL,		/* combine		*/
};
