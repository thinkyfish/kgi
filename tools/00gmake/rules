# -----------------------------------------------------------------------------
#	GNU make specific rules
#

#	The following rules apply to all the (.PHONY) targets listed here:
#
targets = default all depend clean realclean distclean install

.PHONY:	$(targets)

#	The build of <target> is done in five stages:
#
#	init		inititialize build (e.g. create dependencies, headers)
#	entry		build files needed before doing recursion
#	recursion	descent subdirectories and build <target> there
#	exit		build files depending on results of recursive build
#	done		do clean-ups required after each build/recursion
#

targets-init = $(patsubst %,%.init, $(targets))
targets-entry = $(patsubst %,%.entry, $(targets))
targets-recursion = $(patsubst %,%.recursion, $(targets))
targets-exit = $(patsubst %,%.exit, $(targets))
targets-done = $(patsubst %,%.done, $(targets))

$(targets): % : %.init %.entry %.recursion %.exit %.done

#	Create empty double-colon subtargets for init, entry, exit and done, 
#	so that GNU make would not complian about not knowing about them.
#
$(targets-init)::
$(targets-entry)::
$(targets-exit)::
$(targets-done)::

#	For recursion, we first need to find subdirectories with GNUmakefiles
#	and descent only if there are any.
#
subdirs=$(patsubst ./%/GNUmakefile,%, $(wildcard ./*/GNUmakefile))

$(targets-recursion): %.recursion:
ifneq ($(subdirs),)
	@for i in $(subdirs); do $(MAKE) -C $$i $*; done
endif


#
#	default dependency actions
#

depend.init::
	touch .depend

ifeq ($(wildcard .depend),.depend)

GMAKE_FULL_DEPENDENCIES=yes
include .depend

endif


#
#	default clean-up actions, common to all sub-directories
#
#	when making distclean, remove configuration files recursively

distclean.done::
	rm -f GNUmakefile GNUmakefile.tmp .config .config.tmp

#	Doing default actions only for the first instance of make is both more
#	efficient and more robust, as we will not trigger any rules to
#	remake targets which get deleted anyway.
#
ifeq ($(MAKELEVEL),0)

#	clean::
#		- remove files generated from source distribution
#		- remove back-up files created by editors
#
GMAKE_CLEAN_INIT += "*%" "*.bak" "*~"

clean.init::
	-for i in $(GMAKE_CLEAN_INIT); \
		do rm -f `find . -follow -name "$$i" -print`; done

clean.done::
	@echo "Files generated from source distribution removed."

#	realclean::
#		- remove dependencies
#		- make clean
#
GMAKE_REALCLEAN_INIT += ".??*.d" ".depend"

realclean.init:: clean.init
	-for i in $(GMAKE_REALCLEAN_INIT); \
		do rm -f `find . -follow -name "$$i" -print`; done

realclean.done:: clean.done
	@echo "Dependencies removed. Execute 'make depend' to rebuild!"


#	distclean::
#		- remove backups and rejections created by patch
#		- make realclean
#
GMAKE_DISTCLEAN_INIT += ".??*.rej" ".??*.orig" "*.rej" "*.orig" 

distclean.init:: realclean.init
	-for i in $(GMAKE_DISTCLEAN_INIT); \
		do rm -f `find . -follow -name "$$i" -print`; done

distclean.done::
	@echo "made distribution clean."
	@echo "Reconfigure and execute 'make; make' to rebuild from scratch."

endif

#
# -----------------------------------------------------------------------------


